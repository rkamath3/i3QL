I tested 3 different configurations that are described below. Each configuration was tested with 10, 1000, 5000 and
10000 entries being added to the Person- and Patient-Table. I measured the average delay for each message (avg delay)
and the time it takes from the first message that was received to the last message that was received (time to receive).
There are multiple measurements for each configuration.


### Config 1 ###
## Selection is pushed down == events get filtered before getting sent
events=10000
Measurement: measured events=10000, avg delay=2042.5490000000345ms, time to receive=2080ms
Measurement: measured events=10000, avg delay=1969.6947000000005ms, time to receive=1364ms
Measurement: measured events=10001, avg delay=1998.1415858414111ms, time to receive=1312ms

events=5000
Measurement: measured events=5000, avg delay=1241.9715999999867ms, time to receive=797ms
Measurement: measured events=5000, avg delay=1128.6561999999942ms, time to receive=625ms
Measurement: measured events=5000, avg delay=1131.0579999999993ms, time to receive=860ms


events=1000
Measurement: measured events=1001, avg delay=439.39460539460646ms, time to receive=172ms
Measurement: measured events=1001, avg delay=431.9730269730285ms, time to receive=156ms
Measurement: measured events=1000, avg delay=472.65499999999554ms, time to receive=172ms

events=10
Measurement: measured events=10, avg delay=31.000000000000007ms, time to receive=0ms



### Config 2 ###
## Selection is NOT pushed down == events do NOT get filtered before getting sent
events=10000
Measurement: measured events=10000, avg delay=2180.0193000000163ms, time to receive=2179ms
Measurement: measured events=10000, avg delay=2233.5763999999995ms, time to receive=1692ms
Measurement: measured events=10000, avg delay=2295.3275000000326ms, time to receive=2866ms

events=5000
Measurement: measured events=5000, avg delay=1350.4406000000029ms, time to receive=960ms
Measurement: measured events=5001, avg delay=1289.3527294541038ms, time to receive=844ms
Measurement: measured events=5000, avg delay=1365.5519999999945ms, time to receive=1202ms

events=1000
Measurement: measured events=1000, avg delay=451.67099999999857ms, time to receive=388ms
Measurement: measured events=1000, avg delay=492.3569999999994ms, time to receive=206ms
Measurement: measured events=1000, avg delay=522.0059999999992ms, time to receive=220ms

events=10
Measurement: measured events=10, avg delay=26.5ms, time to receive=1ms
Measurement: measured events=10, avg delay=25.200000000000003ms, time to receive=2ms
Measurement: measured events=10, avg delay=30.599999999999998ms, time to receive=7ms



### Config 3 ###
## Everything is pushed directly to the client

events=10000
Events get "swallowed" everytime when I run this benchmark. That menas that only ~9995 of 10000 events are
received at the client. I think this is because so many events get sent at the same time that the network
interface is overloaded...

events=5000
Measurement: measured events=5000, avg delay=1095.2215999999962ms, time to receive=1470ms
Measurement: measured events=5000, avg delay=1205.0465999999944ms, time to receive=1469ms
Measurement: measured events=5000, avg delay=1167.3751999999902ms, time to receive=1498ms

events=1000
Measurement: measured events=1000, avg delay=370.8570000000001ms, time to receive=422ms
Measurement: measured events=1000, avg delay=313.5610000000006ms, time to receive=331ms
Measurement: measured events=1000, avg delay=462.4189999999996ms, time to receive=377ms

events=10
Measurement: measured events=10, avg delay=24.7ms, time to receive=1ms
Measurement: measured events=10, avg delay=25.6ms, time to receive=0ms
Measurement: measured events=11, avg delay=23.63636363636363ms, time to receive=1ms
